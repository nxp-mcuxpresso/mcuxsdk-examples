/*
 * Copyright (c) 2014-2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/*
 * Generated by erpcgen 1.13.0 on Thu Apr 18 09:37:38 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "c_erpc_dac_adc_client.h"
#include "erpc_dac_adc_client.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
dac_adc_client *s_dac_adc_client = nullptr;
#else
ERPC_MANUALLY_CONSTRUCTED_STATIC(dac_adc_client, s_dac_adc_client);
#endif

void adc_get_config(AdcConfig * config)
{
    s_dac_adc_client->adc_get_config(config);
}

void convert_dac_adc(uint32_t numberToConvert, uint32_t * result)
{
    s_dac_adc_client->convert_dac_adc(numberToConvert, result);
}

void set_led(uint8_t whichLed)
{
    s_dac_adc_client->set_led(whichLed);
}

void read_senzor_mag_accel(Vector * results)
{
    s_dac_adc_client->read_senzor_mag_accel(results);
}

void board_get_name(char * name)
{
    s_dac_adc_client->board_get_name(name);
}

void initdac_adc_client(erpc_client_t client)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    erpc_assert(s_dac_adc_client == nullptr);
    s_dac_adc_client = new dac_adc_client(reinterpret_cast<ClientManager *>(client));
#else
    erpc_assert(!s_dac_adc_client.isUsed());
    s_dac_adc_client.construct(reinterpret_cast<ClientManager *>(client));
#endif
}

void deinitdac_adc_client(void)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (s_dac_adc_client != nullptr)
    {
        delete s_dac_adc_client;
        s_dac_adc_client = nullptr;
    }
#else
    s_dac_adc_client.destroy();
#endif
}
