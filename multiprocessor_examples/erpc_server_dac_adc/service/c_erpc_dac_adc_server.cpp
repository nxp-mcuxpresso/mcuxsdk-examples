/*
 * Copyright (c) 2014-2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/*
 * Generated by erpcgen 1.13.0 on Thu Apr 18 09:37:38 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include <new>
#include "c_erpc_dac_adc_server.h"
#include "erpc_dac_adc_server.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


class dac_adc_server: public dac_adc_interface
{
    public:
        virtual ~dac_adc_server() {};


        void adc_get_config(AdcConfig * config)
        {
            ::adc_get_config(config);
        }

        void convert_dac_adc(uint32_t numberToConvert, uint32_t * result)
        {
            ::convert_dac_adc(numberToConvert, result);
        }

        void set_led(uint8_t whichLed)
        {
            ::set_led(whichLed);
        }

        void read_senzor_mag_accel(Vector * results)
        {
            ::read_senzor_mag_accel(results);
        }

        void board_get_name(char * name)
        {
            ::board_get_name(name);
        }
};

ERPC_MANUALLY_CONSTRUCTED_STATIC(dac_adc_service, s_dac_adc_service);
ERPC_MANUALLY_CONSTRUCTED_STATIC(dac_adc_server, s_dac_adc_server);

erpc_service_t create_dac_adc_service(void)
{
    erpc_service_t service;

#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    service = new (nothrow) dac_adc_service(new (nothrow)dac_adc_server());
#else
    if (s_dac_adc_service.isUsed())
    {
        service = NULL;
    }
    else
    {
        s_dac_adc_server.construct();
        s_dac_adc_service.construct(s_dac_adc_server.get());
        service = s_dac_adc_service.get();
    }
#endif

    return service;
}

void destroy_dac_adc_service(erpc_service_t service)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (service)
    {
        delete (dac_adc_server *)(((dac_adc_service *)service)->getHandler());
        delete (dac_adc_service *)service;
    }
#else
    (void)service;
    erpc_assert(service == s_dac_adc_service.get());
    s_dac_adc_service.destroy();
    s_dac_adc_server.destroy();
#endif
}

