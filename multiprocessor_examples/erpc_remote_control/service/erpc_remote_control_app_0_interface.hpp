/*
 * Copyright (c) 2014-2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/*
 * Generated by erpcgen 1.13.0 on Thu Apr 18 09:37:38 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_erpc_remote_control_app_0_interface_hpp_)
#define _erpc_remote_control_app_0_interface_hpp_

#include "erpc_remote_control_app_0_common.hpp"

namespace erpcShim
{


// Abstract base class for remote_control_app_0
class remote_control_app_0_interface
{
    public:
        static const uint8_t m_serviceId = 1;
        static const uint8_t m_get_board_configId = 1;
        static const uint8_t m_get_adc_configId = 2;
        static const uint8_t m_convert_dac_adcId = 3;
        static const uint8_t m_read_mag_accelId = 4;
        static const uint8_t m_set_ledId = 5;

        virtual ~remote_control_app_0_interface(void);

        //! Get board configuration
        virtual void get_board_config(BoardConfig * config) = 0;

        //! Get configuration for ADC
        virtual void get_adc_config(AdcConfig * config) = 0;

        //! Convert number through DAC
        virtual void convert_dac_adc(uint32_t numberToConvert, uint32_t * result) = 0;

        //! Read magnetometer and accelerometer data
        virtual void read_mag_accel(Vector * results, bool * status) = 0;

        //! Turn on selected LED
        virtual void set_led(uint8_t whichLed) = 0;
private:
};
} // erpcShim


#endif // _erpc_remote_control_app_0_interface_hpp_
