/*
 * Copyright (c) 2014-2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/*
 * Generated by erpcgen 1.13.0 on Thu Apr 18 09:37:38 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_c_erpc_remote_control_app_0_client_h_)
#define _c_erpc_remote_control_app_0_client_h_

#include "erpc_remote_control_app_0_common.h"
#include "erpc_client_manager.h"

#if defined(__cplusplus)
extern "C"
{
#endif

#if !defined(ERPC_FUNCTIONS_DEFINITIONS_APP_0)
#define ERPC_FUNCTIONS_DEFINITIONS_APP_0


/*! @brief remote_control_app_0 identifiers */
enum _remote_control_app_0_ids
{
    kremote_control_app_0_service_id = 1,
    kremote_control_app_0_get_board_config_id = 1,
    kremote_control_app_0_get_adc_config_id = 2,
    kremote_control_app_0_convert_dac_adc_id = 3,
    kremote_control_app_0_read_mag_accel_id = 4,
    kremote_control_app_0_set_led_id = 5,
};

//! App 0: client part is on the PC, server on the board
//! @name remote_control_app_0
//@{
//! Get board configuration
void get_board_config(BoardConfig * config);

//! Get configuration for ADC
void get_adc_config(AdcConfig * config);

//! Convert number through DAC
void convert_dac_adc(uint32_t numberToConvert, uint32_t * result);

//! Read magnetometer and accelerometer data
void read_mag_accel(Vector * results, bool * status);

//! Turn on selected LED
void set_led(uint8_t whichLed);
//@}

#endif // ERPC_FUNCTIONS_DEFINITIONS_APP_0

void initremote_control_app_0_client(erpc_client_t client);

void deinitremote_control_app_0_client(void);

#if defined(__cplusplus)
}
#endif

#endif // _c_erpc_remote_control_app_0_client_h_
