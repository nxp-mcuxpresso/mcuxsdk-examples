# yaml-language-server: $schema=../../../../../scripts/data_schema/example_description_schema.json
lpi2c_interrupt:
  section-type: application
  contents:
    meta_path: examples/driver_examples/lpi2c/interrupt
    project-root-path: boards/${board}/driver_examples/lpi2c/interrupt/${multicore_foldername}
    document:
      name: lpi2c_interrupt${core_id_suffix_name}
      category: driver_examples/lpi2c
      brief: The lpi2c_functional_interrupt example shows how to use lpi2c functional
        driver to build a interrupt based application:In this example , one lpi2c
        instance used as lpi2c master and another lpi2c instance used as lpi2c slave
        .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2.
        lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The
        example assumes that the connection is OK between master and slave, so there's
        NO error handling code.
      example_readme:
      - examples/driver_examples/lpi2c/interrupt/readme.md
      - examples/_boards/${board}/driver_examples/lpi2c/interrupt/example_board_readme.md
      - examples/_boards/${board}/examples_shared_readme.md
  boards:
    evkbimxrt1050: []
    evkbmimxrt1060: []
    evkbmimxrt1170@cm4: []
    evkbmimxrt1170@cm7: []
    evkcmimxrt1060: []
    evkmcimx7ulp: []
    evkmimxrt1020: []
    evkmimxrt1024: []
    evkmimxrt1040: []
    evkmimxrt1064: []
    evkmimxrt1160@cm4: []
    evkmimxrt1160@cm7: []
    evkmimxrt1180@cm33: []
    evkmimxrt1180@cm7: []
    frdmk32l2a4s: []
    frdmk32l3a6@cm0plus: []
    frdmk32l3a6@cm4: []
    frdmke15z: []
    frdmmcxa156: []
    frdmmcxa166: []
    frdmmcxa276: []
    frdmmcxn236: []
    frdmmcxn947@cm33_core0: []
    frdmmcxw71: []
    frdmmcxw72@cm33_core0: []
    k32w148evk:
    - +armgcc@debug
    - +armgcc@release
    kw47evk@cm33_core0: []
    mcxw72evk@cm33_core0: []
    kw45b41zevk:
    - +armgcc@debug
    - +armgcc@release
    mcxn5xxevk@cm33_core0: []
    mcxn9xxevk@cm33_core0: []
