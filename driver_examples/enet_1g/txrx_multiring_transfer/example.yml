# yaml-language-server: $schema=../../../../../scripts/data_schema/example_description_schema.json
enet_1g_txrx_multiring_transfer:
  section-type: application
  contents:
    meta_path: examples/driver_examples/enet_1g/txrx_multiring_transfer
    project-root-path: boards/${board}/driver_examples/enet_1g/txrx_multiring_transfer/${multicore_foldername}
    document:
      name: enet_1g_txrx_multiring_transfer${core_id_suffix_name}
      category: driver_examples/enet_1g
      brief: 'The enet_1g_txrx_multiring_transfer example shows the way to use ENET_1G
        driver to receive and transmit avb frame in the avb feature supported multi-ring
        platforms. this example is only supported in multi-ring platform.1. This example
        shows how to initialize the ENET_1G MAC.2. How to use ENET_1G MAC to transmit
        frames in avb supported multiple-ring platforms.The example transmits 30 number
        frames. For simple demo, we create frames with some special definition.1.
        Build transmission frames with broadcast mac address.2. Build different frames
        for each ring: 10 normal ethernet frame, 10 similar IEC 61883-6 type frames,10
        similar IEC 61883-8 type frames and the two IEC 1722 avb frames are set with
        different vlan priority. Notice, To simply show how to use three different
        rings in rx/tx on one board. This example set PHY local loop and you will
        see there will be PHY init auto-negotiation fail and this is normal. because
        phy can not finishauto-negotiation when phy is in loop back mode. However,
        the auto-negotiation fail has no impact on this loop back example, so just
        forget about the failure auto-negotiation.'
      example_readme:
      - examples/driver_examples/enet_1g/txrx_multiring_transfer/readme.md
      - examples/_boards/${board}/driver_examples/enet_1g/txrx_multiring_transfer/example_board_readme.md
      - examples/_boards/${board}/examples_shared_readme.md
  boards:
    evkbmimxrt1170@cm4: []
    evkbmimxrt1170@cm7:
    - +armgcc@flexspi_nor_sdram_debug
    - +armgcc@flexspi_nor_sdram_release
    - +iar@flexspi_nor_sdram_debug
    - +iar@flexspi_nor_sdram_release
    - +mdk@flexspi_nor_sdram_debug
    - +mdk@flexspi_nor_sdram_release
    - -armgcc@debug
    - -armgcc@flexspi_nor_debug
    - -armgcc@flexspi_nor_release
    - -armgcc@release
    - -iar@debug
    - -iar@flexspi_nor_debug
    - -iar@flexspi_nor_release
    - -iar@release
    - -mdk@debug
    - -mdk@flexspi_nor_debug
    - -mdk@flexspi_nor_release
    - -mdk@release
    evkmimxrt1160@cm4: []
    evkmimxrt1160@cm7:
    - +armgcc@flexspi_nor_sdram_debug
    - +armgcc@flexspi_nor_sdram_release
    - +iar@flexspi_nor_sdram_debug
    - +iar@flexspi_nor_sdram_release
    - +mdk@flexspi_nor_sdram_debug
    - +mdk@flexspi_nor_sdram_release
    - -armgcc@debug
    - -armgcc@flexspi_nor_debug
    - -armgcc@flexspi_nor_release
    - -armgcc@release
    - -iar@debug
    - -iar@flexspi_nor_debug
    - -iar@flexspi_nor_release
    - -iar@release
    - -mdk@debug
    - -mdk@flexspi_nor_debug
    - -mdk@flexspi_nor_release
    - -mdk@release
