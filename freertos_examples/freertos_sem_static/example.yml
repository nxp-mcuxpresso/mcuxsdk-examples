# yaml-language-server: $schema=../../../../scripts/data_schema/example_description_schema.json
#
# Copyright 2024 NXP
#
# SPDX-License-Identifier: BSD-3-Clause
freertos_sem_static:
  section-type: application
  contents:
    meta_path: examples/freertos_examples/freertos_sem_static
    project-root-path: boards/${board}/freertos_examples/freertos_sem_static/${multicore_foldername}
    document:
      name: freertos_sem_static${core_id_suffix_name}
      category: freertos_examples
      brief: This document explains the freertos_sem example, what to expect when
        running it and a briefintroduction to the API. The freertos_sem example code
        shows how semaphores works. Two differenttasks are synchronized in bilateral
        rendezvous model.The example uses four tasks. One producer_task and three
        consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer
        and xSemaphore_consumer). These semaphores controlaccess to virtual item.
        The synchronization is based on bilateral rendezvous pattern. Both ofconsumer
        and producer must be prepared to enable transaction.
      example_readme:
      - examples/freertos_examples/freertos_sem_static/readme.md
      - examples/_boards/${board}/freertos_examples/freertos_sem_static/example_board_readme.md
      - examples/_boards/${board}/examples_shared_readme.md
  boards:
    evk9mimx8ulp@cm33: []
    evkbimxrt1050: []
    evkbmimxrt1060: []
    evkbmimxrt1170@cm4: []
    evkbmimxrt1170@cm7: []
    evkcmimxrt1060: []
    evkmcimx7ulp: []
    evkmimx8mm: []
    evkmimx8mn: []
    evkmimx8mnddr3l: []
    evkmimx8mp: []
    evkmimx8mq: []
    evkmimx8ulp@cm33: []
    evkmimxrt1010: []
    evkmimxrt1015: []
    evkmimxrt1020: []
    evkmimxrt1024: []
    evkmimxrt1040: []
    evkmimxrt1064: []
    evkmimxrt1160@cm4: []
    evkmimxrt1160@cm7: []
    evkmimxrt1180@cm33: []
    evkmimxrt1180@cm7: []
    evkmimxrt595@cm33: []
    evkmimxrt685@cm33: []
    frdmk22f: []
    frdmk32l2a4s: []
    frdmk32l2b: []
    frdmk32l3a6@cm0plus: []
    frdmk32l3a6@cm4: []
    frdmke15z: []
    frdmke17z: []
    frdmke17z512: []
    frdmmcxa153: []
    frdmmcxa156: []
    frdmmcxa166: []
    frdmmcxa276: []
    frdmmcxc242: []
    frdmmcxc444: []
    frdmmcxn236: []
    frdmmcxn947@cm33_core0: []
    frdmmcxw71: []
    frdmrw612: []
    k32w148evk:
    - +armgcc@debug
    - +armgcc@release
    kw45b41zevk:
    - +armgcc@debug
    - +armgcc@release
    kw45b41zloc: []
    kw47evk@cm33_core0: []
    lpcxpresso51u68: []
    lpcxpresso54628: []
    lpcxpresso54s018: []
    lpcxpresso54s018m: []
    lpcxpresso55s06: []
    lpcxpresso55s16: []
    lpcxpresso55s28: []
    lpcxpresso55s36: []
    lpcxpresso55s69@cm33_core0: []
    mcimx93autoevk: []
    mcimx93evk: []
    mcimx93qsb: []
    mcxn5xxevk@cm33_core0: []
    mcxn9xxevk@cm33_core0: []
    mcxw72evk@cm33_core0: []
    mimxrt685audevk@cm33: []
    mimxrt700evk@cm33_core1: []
    mimxrt700evk@cm33_core0: []
    rdrw612bga: []
    twrkm34z75m: []
