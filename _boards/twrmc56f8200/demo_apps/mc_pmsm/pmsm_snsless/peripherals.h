/*
    * Copyright 2024 NXP
    *
    * SPDX-License-Identifier: BSD-3-Clause
*/

/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_device_registers.h"
#include "Cpu.h"
#include "fsl_common.h"
#include "fsl_clock.h"
#include "freemaster.h"
#include "freemaster_serial_qsci.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* INTC interrupt vector ID (number). */
#define BUTTON_IRQN kGPIOF_VECTORn
/* INTC interrupt priority register (interrupt priority register/bitfield index). */
#define BUTTON_IRQ GPIOF_IRQn
/* INTC interrupt handler identifier. */
#define BUTTON_IRQHANDLER ivINT_GPIOF
/* Definition of peripheral ID */
#define PWMA_PERIPHERAL PWMA
/* Definition of clock source of submodule 0 frequency in Hertz */
#define PWMA_SM0_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 0 counter clock source frequency in Hertz - PWMA_SM0_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM0_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of clock source of submodule 1 frequency in Hertz */
#define PWMA_SM1_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 1 counter clock source frequency in Hertz - PWMA_SM1_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM1_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of clock source of submodule 2 frequency in Hertz */
#define PWMA_SM2_SM_CLK_SOURCE_FREQ_HZ 100000000U
/* Definition of submodule 2 counter clock source frequency in Hertz - PWMA_SM2_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWMA_SM2_COUNTER_CLK_SOURCE_FREQ_HZ 100000000U
/* PWMA_SM0INIT: INIT=60536 */
#define PWMA_SM0INIT_INIT 0xEC78U
/* PWMA_SM0CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=0, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=0, CLK_SEL=0 */
#define PWMA_SM0CTRL2_INIT 0x0U
/* PWMA_SM0CTRL: LDFQ=0, HALF=0, FULL=1, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM0CTRL_INIT 0x400U
/* PWMA_SM0VAL0: VAL0=0 */
#define PWMA_SM0VAL0_INIT 0x0U
/* PWMA_SM0FRACVAL1: FRACVAL1=0 */
#define PWMA_SM0FRACVAL1_INIT 0x0U
/* PWMA_SM0VAL1: VAL1=4999 */
#define PWMA_SM0VAL1_INIT 0x1387U
/* PWMA_SM0FRACVAL2: FRACVAL2=0 */
#define PWMA_SM0FRACVAL2_INIT 0x0U
/* PWMA_SM0VAL2: VAL2=63036 */
#define PWMA_SM0VAL2_INIT 0xF63CU
/* PWMA_SM0FRACVAL3: FRACVAL3=0 */
#define PWMA_SM0FRACVAL3_INIT 0x0U
/* PWMA_SM0VAL3: VAL3=2500 */
#define PWMA_SM0VAL3_INIT 0x9C4U
/* PWMA_SM0FRACVAL4: FRACVAL4=0 */
#define PWMA_SM0FRACVAL4_INIT 0x0U
/* PWMA_SM0VAL4: VAL4=60556 */
#define PWMA_SM0VAL4_INIT 0xEC8CU
/* PWMA_SM0FRACVAL5: FRACVAL5=0 */
#define PWMA_SM0FRACVAL5_INIT 0x0U
/* PWMA_SM0VAL5: VAL5=0 */
#define PWMA_SM0VAL5_INIT 0x0U
/* PWMA_SM0FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM0FRCTRL_INIT 0x0U
/* PWMA_SM0OCTRL: POLA=1, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM0OCTRL_INIT 0x400U
/* PWMA_SM0STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM0STS_INIT 0x0U
/* PWMA_SM0INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM0INTEN_INIT 0x0U
/* PWMA_SM0TCTRL: PWAOT0=0, PWBOT1=0, OUT_TRIG_EN=16 */
#define PWMA_SM0TCTRL_INIT 0x10U
/* PWMA_SM0DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM0DISMAP0_INIT 0xFF11U
/* PWMA_SM0DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM0DISMAP1_INIT 0xFF00U
/* PWMA_SM0DTCNT0: DTCNT0=50 */
#define PWMA_SM0DTCNT0_INIT 0x32U
/* PWMA_SM0DTCNT1: DTCNT1=50 */
#define PWMA_SM0DTCNT1_INIT 0x32U
/* PWMA_SM1INIT: INIT=60536 */
#define PWMA_SM1INIT_INIT 0xEC78U
/* PWMA_SM1CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=2, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=1, CLK_SEL=2 */
#define PWMA_SM1CTRL2_INIT 0x206U
/* PWMA_SM1CTRL: LDFQ=0, HALF=0, FULL=1, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM1CTRL_INIT 0x400U
/* PWMA_SM1VAL0: VAL0=0 */
#define PWMA_SM1VAL0_INIT 0x0U
/* PWMA_SM1FRACVAL1: FRACVAL1=0 */
#define PWMA_SM1FRACVAL1_INIT 0x0U
/* PWMA_SM1VAL1: VAL1=4999 */
#define PWMA_SM1VAL1_INIT 0x1387U
/* PWMA_SM1FRACVAL2: FRACVAL2=0 */
#define PWMA_SM1FRACVAL2_INIT 0x0U
/* PWMA_SM1VAL2: VAL2=63036 */
#define PWMA_SM1VAL2_INIT 0xF63CU
/* PWMA_SM1FRACVAL3: FRACVAL3=0 */
#define PWMA_SM1FRACVAL3_INIT 0x0U
/* PWMA_SM1VAL3: VAL3=2500 */
#define PWMA_SM1VAL3_INIT 0x9C4U
/* PWMA_SM1FRACVAL4: FRACVAL4=0 */
#define PWMA_SM1FRACVAL4_INIT 0x0U
/* PWMA_SM1VAL4: VAL4=0 */
#define PWMA_SM1VAL4_INIT 0x0U
/* PWMA_SM1FRACVAL5: FRACVAL5=0 */
#define PWMA_SM1FRACVAL5_INIT 0x0U
/* PWMA_SM1VAL5: VAL5=0 */
#define PWMA_SM1VAL5_INIT 0x0U
/* PWMA_SM1FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM1FRCTRL_INIT 0x0U
/* PWMA_SM1OCTRL: POLA=1, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM1OCTRL_INIT 0x400U
/* PWMA_SM1STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM1STS_INIT 0x0U
/* PWMA_SM1INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM1INTEN_INIT 0x0U
/* PWMA_SM1TCTRL: PWAOT0=0, PWBOT1=0, OUT_TRIG_EN=0 */
#define PWMA_SM1TCTRL_INIT 0x0U
/* PWMA_SM1DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM1DISMAP0_INIT 0xFF11U
/* PWMA_SM1DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM1DISMAP1_INIT 0xFF00U
/* PWMA_SM1DTCNT0: DTCNT0=50 */
#define PWMA_SM1DTCNT0_INIT 0x32U
/* PWMA_SM1DTCNT1: DTCNT1=50 */
#define PWMA_SM1DTCNT1_INIT 0x32U
/* PWMA_SM2INIT: INIT=60536 */
#define PWMA_SM2INIT_INIT 0xEC78U
/* PWMA_SM2CTRL2: DBGEN=0, WAITEN=0, INDEP=0, PWM23_INIT=0, PWM45_INIT=0, PWMX_INIT=0, INIT_SEL=2, FRCEN=0, FORCE_SEL=0, RELOAD_SEL=1, CLK_SEL=2 */
#define PWMA_SM2CTRL2_INIT 0x206U
/* PWMA_SM2CTRL: LDFQ=0, HALF=0, FULL=1, PRSC=0, SPLIT=0, LDMOD=0, DBLX=0, DBLEN=0 */
#define PWMA_SM2CTRL_INIT 0x400U
/* PWMA_SM2VAL0: VAL0=0 */
#define PWMA_SM2VAL0_INIT 0x0U
/* PWMA_SM2FRACVAL1: FRACVAL1=0 */
#define PWMA_SM2FRACVAL1_INIT 0x0U
/* PWMA_SM2VAL1: VAL1=4999 */
#define PWMA_SM2VAL1_INIT 0x1387U
/* PWMA_SM2FRACVAL2: FRACVAL2=0 */
#define PWMA_SM2FRACVAL2_INIT 0x0U
/* PWMA_SM2VAL2: VAL2=63036 */
#define PWMA_SM2VAL2_INIT 0xF63CU
/* PWMA_SM2FRACVAL3: FRACVAL3=0 */
#define PWMA_SM2FRACVAL3_INIT 0x0U
/* PWMA_SM2VAL3: VAL3=2500 */
#define PWMA_SM2VAL3_INIT 0x9C4U
/* PWMA_SM2FRACVAL4: FRACVAL4=0 */
#define PWMA_SM2FRACVAL4_INIT 0x0U
/* PWMA_SM2VAL4: VAL4=0 */
#define PWMA_SM2VAL4_INIT 0x0U
/* PWMA_SM2FRACVAL5: FRACVAL5=0 */
#define PWMA_SM2FRACVAL5_INIT 0x0U
/* PWMA_SM2VAL5: VAL5=0 */
#define PWMA_SM2VAL5_INIT 0x0U
/* PWMA_SM2FRCTRL: FRAC_PU=0, FRAC45_EN=0, FRAC23_EN=0, FRAC1_EN=0 */
#define PWMA_SM2FRCTRL_INIT 0x0U
/* PWMA_SM2OCTRL: POLA=1, POLB=0, PWMAFS=0, PWMBFS=0 */
#define PWMA_SM2OCTRL_INIT 0x400U
/* PWMA_SM2STS: REF=0, RF=0, CFA1=0, CFA0=0, CFB1=0, CFB0=0, CFX1=0, CFX0=0, CMPF=0 */
#define PWMA_SM2STS_INIT 0x0U
/* PWMA_SM2INTEN: REIE=0, RIE=0, CA1IE=0, CA0IE=0, CB1IE=0, CB0IE=0, CX1IE=0, CX0IE=0, CMPIE=0 */
#define PWMA_SM2INTEN_INIT 0x0U
/* PWMA_SM2TCTRL: PWAOT0=0, PWBOT1=0, OUT_TRIG_EN=0 */
#define PWMA_SM2TCTRL_INIT 0x0U
/* PWMA_SM2DISMAP0: DIS0B=1, DIS0A=1 */
#define PWMA_SM2DISMAP0_INIT 0xFF11U
/* PWMA_SM2DISMAP1: DIS1B=0, DIS1A=0 */
#define PWMA_SM2DISMAP1_INIT 0xFF00U
/* PWMA_SM2DTCNT0: DTCNT0=50 */
#define PWMA_SM2DTCNT0_INIT 0x32U
/* PWMA_SM2DTCNT1: DTCNT1=50 */
#define PWMA_SM2DTCNT1_INIT 0x32U
/* PWMA_OUTEN: PWMA_EN=0, PWMB_EN=0, PWMX_EN=0 */
#define PWMA_OUTEN_INIT 0x0U
/* PWMA_MASK: UPDATE_MASK=0, MASKA=0, MASKB=0, MASKX=0 */
#define PWMA_MASK_INIT 0x0U
/* PWMA_SWCOUT: SM2OUT23=0, SM2OUT45=0, SM1OUT23=0, SM1OUT45=0, SM0OUT23=0, SM0OUT45=0 */
#define PWMA_SWCOUT_INIT 0x0U
/* PWMA_DTSRCSEL: SM2SEL23=0, SM2SEL45=0, SM1SEL23=0, SM1SEL45=0, SM0SEL23=0, SM0SEL45=0 */
#define PWMA_DTSRCSEL_INIT 0x0U
/* PWMA_MCTRL: IPOL=0, RUN=5, LDOK=5 */
#define PWMA_MCTRL_INIT 0x505U
/* PWMA_MCTRL2: MONPLL=0 */
#define PWMA_MCTRL2_INIT 0x0U
/* PWMA_FCTRL0: FLVL=1, FAUTO=1, FSAFE=0, FIE=0 */
#define PWMA_FCTRL0_INIT 0x1100U
/* PWMA_FSTS0: FHALF=0, FFULL=0 */
#define PWMA_FSTS0_INIT 0xF0FU
/* PWMA_FFILT0: GSTR=0, FILT_CNT=2, FILT_PER=20 */
#define PWMA_FFILT0_INIT 0x214U
/* PWMA_FTST0: FTEST=0 */
#define PWMA_FTST0_INIT 0x0U
/* PWMA_FCTRL1: FLVL=0, FAUTO=0, FSAFE=0, FIE=0 */
#define PWMA_FCTRL1_INIT 0x0U
/* PWMA_FSTS1: FHALF=0, FFULL=0 */
#define PWMA_FSTS1_INIT 0xF0FU
/* PWMA_FFILT1: GSTR=0, FILT_CNT=0, FILT_PER=0 */
#define PWMA_FFILT1_INIT 0x0U
/* PWMA_FTST1: FTEST=0 */
#define PWMA_FTST1_INIT 0x0U
/* OUTEN register mask */
#define PWMA_OUTEN_INIT_MASK 0x777U
/* MASK register mask */
#define PWMA_MASK_INIT_MASK 0x7777U
/* SWCOUT register mask */
#define PWMA_SWCOUT_INIT_MASK 0x3FU
/* DTSRCSEL register mask */
#define PWMA_DTSRCSEL_INIT_MASK 0xFFFU
/* MCTRL register mask */
#define PWMA_MCTRL_INIT_MASK 0x7777U
/* Gives information whether SM0 fractional block is available */
#define PWMA_SM0_FRACTIONAL_BLOCK_AVAILABLE 
/* Gives information whether SM1 fractional block is available */
#define PWMA_SM1_FRACTIONAL_BLOCK_AVAILABLE 
/* Gives information whether SM2 fractional block is available */
#define PWMA_SM2_FRACTIONAL_BLOCK_AVAILABLE 
/* Gives information whether SM3 fractional block is available */
#define PWMA_SM3_FRACTIONAL_BLOCK_AVAILABLE 

/* BOARD_InitPeripherals defines for ADC */
/* Definition of peripheral ID */
#define ADC_PERIPHERAL ADC
/* Definition of the clock source */
#define ADC_CLOCK_SOURCE ADC_CLK_SRC
/* ADC interrupt vector ID (number). */
#define ADC_A_IRQN kADC_CC0_VECTORn
/* ADC interrupt priority register (interrupt priority register/bitfield index). */
#define ADC_A_IRQ ADC_CC0_IRQn
/* ADC interrupt handler identifier. */
#define ADC_A_IRQHANDLER ivINT_ADC_CC0
/* Definition of the minimal index of the samples related to the registers LOLIM2, HILIM2 and OFFST2. */
#define ADC_MIN_REGS2_INDEX 16U
/* Definition of Sample ID 0 */
#define ADC_SAMPLE_0 0
/* Definition of Sample ID 1 */
#define ADC_SAMPLE_1 1
/* Definition of Sample ID 2 */
#define ADC_SAMPLE_2 2
/* Definition of Sample ID 3 */
#define ADC_SAMPLE_3 3
/* Definition of Sample ID 4 */
#define ADC_SAMPLE_4 4
/* Definition of Sample ID 5 */
#define ADC_SAMPLE_5 5
/* Definition of Sample ID 6 */
#define ADC_SAMPLE_6 6
/* Definition of Sample ID 7 */
#define ADC_SAMPLE_7 7
/* Definition of Sample ID 8 */
#define ADC_SAMPLE_16 16
/* Definition of Sample ID 9 */
#define ADC_SAMPLE_17 17
/* Definition of Sample ID 0 */
#define ADC_SAMPLE_8 8
/* Definition of Sample ID 1 */
#define ADC_SAMPLE_9 9
/* Definition of Sample ID 2 */
#define ADC_SAMPLE_10 10
/* Definition of Sample ID 3 */
#define ADC_SAMPLE_11 11
/* Definition of Sample ID 4 */
#define ADC_SAMPLE_12 12
/* Definition of Sample ID 5 */
#define ADC_SAMPLE_13 13
/* Definition of Sample ID 6 */
#define ADC_SAMPLE_14 14
/* Definition of Sample ID 7 */
#define ADC_SAMPLE_15 15
/* Definition of Sample ID 8 */
#define ADC_SAMPLE_18 18
/* Definition of Sample ID 9 */
#define ADC_SAMPLE_19 19
/* ADC_CTRL1: DMAEN0=0, STOP0=0, START0=0, SYNC0=1, EOSIE0=1, ZCIE=0, LLMTIE=0, HLMTIE=0, CHNCFG_L=0, SMODE=5 */
#define ADC_CTRL1_INIT 0x1805U
/* ADC_CTRL2: DMAEN1=0, STOP1=0, START1=0, SYNC1=1, CHNCFG_H=0, SIMULT=1, DIV0=4 */
#define ADC_CTRL2_INIT 0x1044U
/* ADC_ZXCTRL1: ZCE7=0, ZCE6=0, ZCE5=0, ZCE4=0, ZCE3=0, ZCE2=0, ZCE1=0, ZCE0=0 */
#define ADC_ZXCTRL1_INIT 0x0U
/* ADC_ZXCTRL2: ZCE15=0, ZCE14=0, ZCE13=0, ZCE12=0, ZCE11=0, ZCE10=0, ZCE9=0, ZCE8=0 */
#define ADC_ZXCTRL2_INIT 0x0U
/* ADC_CLIST1: SAMPLE3=3, SAMPLE2=2, SAMPLE1=1, SAMPLE0=0 */
#define ADC_CLIST1_INIT 0x3210U
/* ADC_CLIST2: SAMPLE7=7, SAMPLE6=6, SAMPLE5=5, SAMPLE4=4 */
#define ADC_CLIST2_INIT 0x7654U
/* ADC_CLIST3: SAMPLE11=11, SAMPLE10=10, SAMPLE9=8, SAMPLE8=9 */
#define ADC_CLIST3_INIT 0xBA89U
/* ADC_CLIST4: SAMPLE15=15, SAMPLE14=14, SAMPLE13=13, SAMPLE12=12 */
#define ADC_CLIST4_INIT 0xFEDCU
/* ADC_SDIS: DS=64764 */
#define ADC_SDIS_INIT 0xFCFCU
/* ADC_LOLIM0: LLMT=0 */
#define ADC_LOLIM0_INIT 0x0U
/* ADC_LOLIM1: LLMT=0 */
#define ADC_LOLIM1_INIT 0x0U
/* ADC_LOLIM2: LLMT=0 */
#define ADC_LOLIM2_INIT 0x0U
/* ADC_LOLIM3: LLMT=0 */
#define ADC_LOLIM3_INIT 0x0U
/* ADC_LOLIM4: LLMT=0 */
#define ADC_LOLIM4_INIT 0x0U
/* ADC_LOLIM5: LLMT=0 */
#define ADC_LOLIM5_INIT 0x0U
/* ADC_LOLIM6: LLMT=0 */
#define ADC_LOLIM6_INIT 0x0U
/* ADC_LOLIM7: LLMT=0 */
#define ADC_LOLIM7_INIT 0x0U
/* ADC_LOLIM8: LLMT=0 */
#define ADC_LOLIM8_INIT 0x0U
/* ADC_LOLIM9: LLMT=0 */
#define ADC_LOLIM9_INIT 0x0U
/* ADC_LOLIM10: LLMT=0 */
#define ADC_LOLIM10_INIT 0x0U
/* ADC_LOLIM11: LLMT=0 */
#define ADC_LOLIM11_INIT 0x0U
/* ADC_LOLIM12: LLMT=0 */
#define ADC_LOLIM12_INIT 0x0U
/* ADC_LOLIM13: LLMT=0 */
#define ADC_LOLIM13_INIT 0x0U
/* ADC_LOLIM14: LLMT=0 */
#define ADC_LOLIM14_INIT 0x0U
/* ADC_LOLIM15: LLMT=0 */
#define ADC_LOLIM15_INIT 0x0U
/* ADC_HILIM0: HLMT=4095 */
#define ADC_HILIM0_INIT 0x7FF8U
/* ADC_HILIM1: HLMT=4095 */
#define ADC_HILIM1_INIT 0x7FF8U
/* ADC_HILIM2: HLMT=4095 */
#define ADC_HILIM2_INIT 0x7FF8U
/* ADC_HILIM3: HLMT=4095 */
#define ADC_HILIM3_INIT 0x7FF8U
/* ADC_HILIM4: HLMT=4095 */
#define ADC_HILIM4_INIT 0x7FF8U
/* ADC_HILIM5: HLMT=4095 */
#define ADC_HILIM5_INIT 0x7FF8U
/* ADC_HILIM6: HLMT=4095 */
#define ADC_HILIM6_INIT 0x7FF8U
/* ADC_HILIM7: HLMT=4095 */
#define ADC_HILIM7_INIT 0x7FF8U
/* ADC_HILIM8: HLMT=4095 */
#define ADC_HILIM8_INIT 0x7FF8U
/* ADC_HILIM9: HLMT=4095 */
#define ADC_HILIM9_INIT 0x7FF8U
/* ADC_HILIM10: HLMT=4095 */
#define ADC_HILIM10_INIT 0x7FF8U
/* ADC_HILIM11: HLMT=4095 */
#define ADC_HILIM11_INIT 0x7FF8U
/* ADC_HILIM12: HLMT=4095 */
#define ADC_HILIM12_INIT 0x7FF8U
/* ADC_HILIM13: HLMT=4095 */
#define ADC_HILIM13_INIT 0x7FF8U
/* ADC_HILIM14: HLMT=4095 */
#define ADC_HILIM14_INIT 0x7FF8U
/* ADC_HILIM15: HLMT=4095 */
#define ADC_HILIM15_INIT 0x7FF8U
/* ADC_OFFST0: OFFSET=0 */
#define ADC_OFFST0_INIT 0x0U
/* ADC_OFFST1: OFFSET=0 */
#define ADC_OFFST1_INIT 0x0U
/* ADC_OFFST2: OFFSET=0 */
#define ADC_OFFST2_INIT 0x0U
/* ADC_OFFST3: OFFSET=0 */
#define ADC_OFFST3_INIT 0x0U
/* ADC_OFFST4: OFFSET=0 */
#define ADC_OFFST4_INIT 0x0U
/* ADC_OFFST5: OFFSET=0 */
#define ADC_OFFST5_INIT 0x0U
/* ADC_OFFST6: OFFSET=0 */
#define ADC_OFFST6_INIT 0x0U
/* ADC_OFFST7: OFFSET=0 */
#define ADC_OFFST7_INIT 0x0U
/* ADC_OFFST8: OFFSET=0 */
#define ADC_OFFST8_INIT 0x0U
/* ADC_OFFST9: OFFSET=0 */
#define ADC_OFFST9_INIT 0x0U
/* ADC_OFFST10: OFFSET=0 */
#define ADC_OFFST10_INIT 0x0U
/* ADC_OFFST11: OFFSET=0 */
#define ADC_OFFST11_INIT 0x0U
/* ADC_OFFST12: OFFSET=0 */
#define ADC_OFFST12_INIT 0x0U
/* ADC_OFFST13: OFFSET=0 */
#define ADC_OFFST13_INIT 0x0U
/* ADC_OFFST14: OFFSET=0 */
#define ADC_OFFST14_INIT 0x0U
/* ADC_OFFST15: OFFSET=0 */
#define ADC_OFFST15_INIT 0x0U
/* ADC_PWR: ASB=0, PUDELAY=26, APD=0, PD1=0, PD0=0 */
#define ADC_PWR_INIT 0x1DA4U
/* ADC_CAL: SEL_VREFH_B=0, SEL_VREFL_B=0, SEL_VREFH_A=0, SEL_VREFL_A=0 */
#define ADC_CAL_INIT 0x0U
/* ADC_GC1: GAIN7=0, GAIN6=0, GAIN5=0, GAIN4=0, GAIN3=0, GAIN2=0, GAIN1=0, GAIN0=0 */
#define ADC_GC1_INIT 0x0U
/* ADC_GC2: GAIN15=0, GAIN14=0, GAIN13=0, GAIN12=0, GAIN11=0, GAIN10=0, GAIN9=0, GAIN8=0 */
#define ADC_GC2_INIT 0x0U
/* ADC_SCTRL: SC=0 */
#define ADC_SCTRL_INIT 0x0U
/* ADC_PWR2: DIV1=4 */
#define ADC_PWR2_INIT 0x400U
/* ADC_CTRL3: UPDEN_H=0, UPDEN_L=0, DMASRC=0 */
#define ADC_CTRL3_INIT 0x0U
/* ADC_SCHLTEN: SCHLTEN=0 */
#define ADC_SCHLTEN_INIT 0x0U
/* ADC_ZXCTRL3: ZCE19=0, ZCE18=0, ZCE17=0, ZCE16=0 */
#define ADC_ZXCTRL3_INIT 0x0U
/* ADC_CLIST5: SEL_INTERNAL_1=0, SEL_TEMP_1=0, SEL_INTERNAL_0=0, SEL_TEMP_0=0, SAMPLE19=3, SAMPLE18=2, SAMPLE17=1, SAMPLE16=0 */
#define ADC_CLIST5_INIT 0xE4U
/* ADC_SDIS2: DS=15 */
#define ADC_SDIS2_INIT 0xFFFFU
/* ADC_LOLIM216: LLMT=0 */
#define ADC_LOLIM216_INIT 0x0U
/* ADC_LOLIM217: LLMT=0 */
#define ADC_LOLIM217_INIT 0x0U
/* ADC_LOLIM218: LLMT=0 */
#define ADC_LOLIM218_INIT 0x0U
/* ADC_LOLIM219: LLMT=0 */
#define ADC_LOLIM219_INIT 0x0U
/* ADC_HILIM216: HLMT=4095 */
#define ADC_HILIM216_INIT 0x7FF8U
/* ADC_HILIM217: HLMT=4095 */
#define ADC_HILIM217_INIT 0x7FF8U
/* ADC_HILIM218: HLMT=4095 */
#define ADC_HILIM218_INIT 0x7FF8U
/* ADC_HILIM219: HLMT=4095 */
#define ADC_HILIM219_INIT 0x7FF8U
/* ADC_OFFST216: OFFSET=0 */
#define ADC_OFFST216_INIT 0x0U
/* ADC_OFFST217: OFFSET=0 */
#define ADC_OFFST217_INIT 0x0U
/* ADC_OFFST218: OFFSET=0 */
#define ADC_OFFST218_INIT 0x0U
/* ADC_OFFST219: OFFSET=0 */
#define ADC_OFFST219_INIT 0x0U
/* ADC_GC3: GAIN19=0, GAIN18=0, GAIN17=0, GAIN16=0 */
#define ADC_GC3_INIT 0x0U
/* ADC_SCTRL2: SC=0 */
#define ADC_SCTRL2_INIT 0x0U
/* ADC_SCHLTEN2: SCHLTEN=0 */
#define ADC_SCHLTEN2_INIT 0x0U
/* QSCI1_RATE: SBRL=27, FRAC_SBR=1 */
#define QSCI1_RATE_INIT 0xD9U
/* QSCI1_CTRL1: LOOP=0, SWAI=0, RSRC=0, M=0, WAKE=0, POL=0, PE=0, PT=0, TEIE=0, TIIE=0, RFIE=0, REIE=0, TE=1, RE=1, RWU=0 */
#define QSCI1_CTRL1_INIT 0xCU
/* QSCI1_CTRL2: TFWM=0, RFWM=0, FIFO_EN=0, RIEIE=0, LINMODE=0, TDE=0, RDE=0 */
#define QSCI1_CTRL2_INIT 0x0U
/* QSCI1_CTRL3: SBRH=0, SHEN=0 */
#define QSCI1_CTRL3_INIT 0x0U
/* BOARD_InitPeripherals defines for PIT0 */
/* Definition of peripheral ID. */
#define PIT0_PERIPHERAL PIT0
/* Definition of the PIT0 clock source frequency in Hertz */
#define PIT0_CLK_SOURCE_FREQ_HZ 50000000U
/* Definition of the PIT0 counter clock source frequency in Hertz divided by prescaler */
#define PIT0_COUNTER_CLK_SOURCE_FREQ_HZ 195313U
/* Definition of the PIT0 counter roll-over frequency in Hertz */
#define PIT0_ROLLOVER_FREQ_HZ 1002U
/* PIT0_CTRL: SLAVE=0, CLKSEL=0, PRESCALER=8, PRIE=1, CNT_EN=1 */
#define PIT0_CTRL_INIT 0x43U
/* PIT0_MOD: MODULO_VALUE=194 */
#define PIT0_MOD_INIT 0xC2U
/* PIT0 interrupt vector ID (number). */
#define PIT0_IRQN kPIT0_ROLLOVR_VECTORn
/* PIT0 interrupt priority register (interrupt priority register/bitfield index). */
#define PIT0_IRQ PIT0_ROLLOVR_IRQn
/* PIT0 interrupt handler identifier. */
#define PIT0_IRQHANDLER ivINT_PIT0_ROLLOVR
/* QSPI0_SPSCR: SPR=5, DSO=0, ERRIE=0, MODFEN=0, SPRIE=0, SPMSTR=1, CPOL=1, CPHA=0, SPE=1, SPTIE=0 */
#define QSPI0_SPSCR_INIT 0xA1A1U
/* QSPI0_SPDSR: WOM=0, TDMAEN=0, RDMAEN=0, BD2X=0, SSB_ODM=0, SSB_AUTO=1, SSB_DDR=1, SSB_STRB=0, SPR3=0, DS=7 */
#define QSPI0_SPDSR_INIT 0x587U
/* QSPI0_SPFIFO: TFWM=0, RFWM=3, FIFO_ENA=0 */
#define QSPI0_SPFIFO_INIT 0xCU
/* QSPI0_SPWAIT: WAIT=0 */
#define QSPI0_SPWAIT_INIT 0x0U
/* QSPI0_SPCTL2: SHEN=0 */
#define QSPI0_SPCTL2_INIT 0x0U
/* Definition of peripheral ID */
#define TMRA_PERIPHERAL TMRA
/* Definition of the timer channel 0 clock source frequency. */
#define TMRA_CHANNEL_0_CLOCK_SOURCE 100000000UL
/* Definition of the timer enable mask for all channels. */
#define TMRA_ENBL_INIT_MASK TMR_ENBL_ENBL_MASK
/* TMRA_COMP10: COMPARISON_1=0 */
#define TMRA_COMP10_INIT 0x0U
/* TMRA_COMP20: COMPARISON_2=0 */
#define TMRA_COMP20_INIT 0x0U
/* TMRA_LOAD0: LOAD=0 */
#define TMRA_LOAD0_INIT 0x0U
/* TMRA_CNTR0: COUNTER=0 */
#define TMRA_CNTR0_INIT 0x0U
/* TMRA_CTRL0: CM=1, PCS=8, SCS=0, ONCE=0, LENGTH=0, DIR=0, COINIT=0, OUTMODE=0 */
#define TMRA_CTRL0_INIT 0x3000U
/* TMRA_SCTRL0: TCFIE=0, TOFIE=0, IEFIE=0, IPS=0, CAPTURE_MODE=0, MSTR=0, EEOF=0, VAL=0, FORCE=0, OPS=0, OEN=0 */
#define TMRA_SCTRL0_INIT 0x0U
/* TMRA_CMPLD10: COMPARATOR_LOAD_1=0 */
#define TMRA_CMPLD10_INIT 0x0U
/* TMRA_CMPLD20: COMPARATOR_LOAD_2=0 */
#define TMRA_CMPLD20_INIT 0x0U
/* TMRA_CSCTRL0: DBG_EN=0, FAULT=0, ALT_LOAD=0, ROC=0, TCI=0, TCF2EN=0, TCF1EN=0, CL2=0, CL1=0 */
#define TMRA_CSCTRL0_INIT 0x0U
/* TMRA_FILT0: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT0_INIT 0x0U
/* TMRA_DMA0: CMPLD2DE=0, CMPLD1DE=0, IEFDE=0 */
#define TMRA_DMA0_INIT 0x0U
/* TMRA_ENBL: ENBL=15 */
#define TMRA_ENBL_INIT 0xFU
/* TMRA_FILT1: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT1_INIT 0x0U
/* TMRA_FILT2: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT2_INIT 0x0U
/* TMRA_FILT3: FILT_CNT=0, FILT_PER=0 */
#define TMRA_FILT3_INIT 0x0U
/* FreeMASTER_Recorder_0's buffer size definition */
#define FREEMASTER_REC_0_SIZE 1024
/* Definition of peripheral ID */
#define FREEMASTER_SERIAL_PERIPHERAL QSCI1
/* Definition of the clock source frequency */
#define FREEMASTER_SERIAL_PERIPHERAL_CLK_FREQ 50000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
/* Recorder0 configuration */
extern FMSTR_U8 FreeMASTER_RecBuffer0[FREEMASTER_REC_0_SIZE];

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
