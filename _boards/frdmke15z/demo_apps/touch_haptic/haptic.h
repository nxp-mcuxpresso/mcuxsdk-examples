/*
 * The Clear BSD License
 * Copyright (c) 2013 - 2016, Freescale Semiconductor, Inc.
 * Copyright 2016-2018 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted (subject to the limitations in the disclaimer below) provided
 * that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 /*
 * Static configuration header file for the NXP Touch Library
 * generated by the NXP Touch GUI Tool
*/
#ifndef _HAPTIC_H_
#define _HAPTIC_H_

#include <stdint.h>

/*******************************************************************************
 * Definitions
 ******************************************************************************/
/* Haptic sample rate in Hz */
#define HAPTIC_FS ( 16000 )
/* haptic number of channels */
#define HAP_N_CH      ( 2 )


/*******************************************************************************
 * Types
 ******************************************************************************/

typedef enum _haptic_trigger_en
{
    HAPTIC_TRIGGER_PRESS      = 0x0U, /*!< Button press id */
    HAPTIC_TRIGGER_RELEASE    = 0x1U, /*!< Button release id */
    HAPTIC_TRIGGER_AUTOREPEAT = 0x2U, /*!< Button autorepeat id */
    HAPTIC_TRIGGER_INTRO      = 0x3U, /*!< Button intro id */
    HAPTIC_TRIGGER_BEEP       = 0x4U, /*!< Button beep id */
    HAPTIC_TRIGGER_LAST               /*!< Last id*/
} haptic_trigger_en;

typedef struct _haptic_effect_t
{
    uint8_t delay[HAP_N_CH];       /*!< Delay applied to N-th channel */
    int16_t gain;                  /*!< Overall gain (to equalise strength across buttons */
} haptic_effect_t;

typedef void (*haptic_callback_t)( void );

/*******************************************************************************
 * Variables
 ******************************************************************************/

/*******************************************************************************
 * Prototypes
 ******************************************************************************/

/* Initialize haptic submodules */
void haptic_init( void );

/* Trigger selected haptic click */
void haptic_trigger_click( haptic_trigger_en id, haptic_effect_t* pEffect );

/* Trigger selected haptic click and repeat it with a delay */
void haptic_trigger_double_click( haptic_trigger_en id, haptic_effect_t* pEffect, int32_t delay );

/* Main process */
void haptic_main( void );

/* Set haptic effect on/off */
void haptic_enable_haptic( uint8_t flagOn );

/* Set audio effect on/off */
void haptic_enable_audio( uint8_t flagOn );
#endif
